If you have **12 months** to prepare for a **Software Engineering (SE) job**, you need a structured plan focusing on **technical skills, projects, and job preparation**. Since you're already an **IT undergrad at the University of Moratuwa** and working on **MERN stack projects**, this roadmap will help you **become job-ready** within a year.  

---

## **üóìÔ∏è Yearly Plan (12-Month Roadmap)**  

### **üìå Month 1-3: Strengthen Foundations**  
‚úÖ **Master a Primary Programming Language** (JavaScript, Python, or Java)  
- Focus on **JavaScript** (since you're doing MERN)  
- Learn ES6+ features, functional programming, and async handling  

‚úÖ **Data Structures & Algorithms (DSA)**  
- Learn **arrays, linked lists, stacks, queues, hash maps, trees, graphs**  
- Implement DSA in **JavaScript or Python**  
- Solve **LeetCode (Easy & Medium) / CodeSignal** problems  
- Resources: [NeetCode](https://neetcode.io/) (YouTube)  

‚úÖ **Git & GitHub**  
- Learn branching, PRs, merges, and collaboration  

‚úÖ **MERN Stack Basics** (Since you are already using it)  
- React: Components, Props, State, Hooks  
- Express.js, MongoDB, Node.js  

---

### **üìå Month 4-6: Real-World Projects & Advanced DSA**  
‚úÖ **Build & Deploy Full-Stack Projects**  
- Improve your **Visitor Management System (VMS)** project  
- Start a **new real-world project (E-commerce, Job Board, etc.)**  
- **Deploy** projects (Vercel, Netlify, or Firebase for frontend & Railway/Render for backend)  

‚úÖ **Backend Development Deep Dive**  
- API development (REST, GraphQL)  
- Authentication (JWT, OAuth)  
- Database optimization (Indexes, Query Performance)  

‚úÖ **DSA (LeetCode Medium & Hard)**  
- Solve **150-200 problems**  
- Focus on **Dynamic Programming (DP), Graphs, Binary Search**  

‚úÖ **System Design Basics**  
- Learn **Scalability, Load Balancing, Caching, Microservices**  
- Study **low-level design patterns (Singleton, Factory, Observer)**  

‚úÖ **Participate in Hackathons & Open Source**  
- Join **Hacktoberfest, Google Summer of Code (GSoC), or Open Source projects**  

---

### **üìå Month 7-9: Resume, Job Hunting & Mock Interviews**  
‚úÖ **Enhance Your LinkedIn & Resume**  
- Add projects, skills, and certifications  
- Connect with professionals & recruiters  

‚úÖ **Job-Oriented Projects**  
- **Build a portfolio website** showcasing your projects  
- Implement **1-2 high-quality case-study projects**  

‚úÖ **Mock Interviews**  
- Start doing **mock technical interviews** (Pramp, Interviewing.io)  
- **System design & DSA mock interviews** with peers  

‚úÖ **Networking & Job Applications**  
- Apply for **internships or part-time roles**  
- Reach out to **mentors and professionals** for referrals  

---

### **üìå Month 10-12: Final Interview Prep & Job Applications**  
‚úÖ **Job Applications in Full Swing**  
- Apply to **100+ companies** (startups, mid-size, FAANG-like)  
- Focus on **LinkedIn, AngelList, Glassdoor**  

‚úÖ **Advanced System Design & Behavioral Interviews**  
- Prepare **STAR method answers** for HR rounds  
- Revise **DBMS, OS, Networking, OOPs concepts**  

‚úÖ **Continue Solving DSA**  
- Do **Daily LeetCode (Medium/Hard)** until placement  

‚úÖ **Offer Negotiation & Final Selection**  
- If you get multiple offers, negotiate salary & perks  

---

## **üåü Key Takeaways**
1. **Master MERN + DSA + System Design**
2. **Build & deploy real-world projects**
3. **Contribute to Open Source & Networking**
4. **Apply for internships early**
5. **Mock interviews & consistent job applications**  

This roadmap will **maximize your chances** of landing a great **Software Engineering job** in a year. üöÄ Let me know if you want more **specific learning resources** or a **detailed weekly breakdown**!
